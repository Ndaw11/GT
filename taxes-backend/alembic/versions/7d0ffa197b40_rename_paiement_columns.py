"""rename paiement columns

Revision ID: 7d0ffa197b40
Revises: 
Create Date: 2025-10-04 06:45:25.691988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7d0ffa197b40'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vehicules_id'), table_name='vehicules')
    op.drop_index(op.f('ix_vehicules_immatriculation'), table_name='vehicules')
    op.drop_table('vehicules')
    op.drop_index(op.f('ix_transactions_mobiles_id'), table_name='transactions_mobiles')
    op.drop_table('transactions_mobiles')
    op.drop_index(op.f('ix_users_cni'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_matricule'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_paiements_id'), table_name='paiements')
    op.drop_table('paiements')
    op.drop_index(op.f('ix_factures_id'), table_name='factures')
    op.drop_table('factures')
    op.drop_index(op.f('ix_modeles_notifications_id'), table_name='modeles_notifications')
    op.drop_table('modeles_notifications')
    op.drop_index(op.f('ix_taxes_id'), table_name='taxes')
    op.drop_index(op.f('ix_taxes_libelle'), table_name='taxes')
    op.drop_table('taxes')
    op.drop_index(op.f('ix_notifications_envoyees_id'), table_name='notifications_envoyees')
    op.drop_table('notifications_envoyees')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications_envoyees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titre', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dateEnvoi', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('destinataire_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idFacture', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idModele', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['destinataire_id'], ['users.id'], name=op.f('notifications_envoyees_destinataire_id_fkey')),
    sa.ForeignKeyConstraint(['idFacture'], ['factures.id'], name=op.f('notifications_envoyees_idFacture_fkey')),
    sa.ForeignKeyConstraint(['idModele'], ['modeles_notifications.id'], name=op.f('notifications_envoyees_idModele_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('notifications_envoyees_pkey'))
    )
    op.create_index(op.f('ix_notifications_envoyees_id'), 'notifications_envoyees', ['id'], unique=False)
    op.create_table('taxes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('taxes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('libelle', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('montant', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('periodicite', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='taxes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_taxes_libelle'), 'taxes', ['libelle'], unique=True)
    op.create_index(op.f('ix_taxes_id'), 'taxes', ['id'], unique=False)
    op.create_table('modeles_notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titre', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type_notification', postgresql.ENUM('facture_emise', 'paiement_reussi', 'paiement_echec', 'rappel_facture', name='typenotificationenum'), autoincrement=False, nullable=False),
    sa.Column('dateCreation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('modeles_notifications_pkey')),
    sa.UniqueConstraint('type_notification', name=op.f('modeles_notifications_type_notification_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_modeles_notifications_id'), 'modeles_notifications', ['id'], unique=False)
    op.create_table('factures',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('factures_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('periode', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('montantDu', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dateEmission', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('dateEcheance', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('idConducteur', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idTaxe', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idVehicule', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['idConducteur'], ['users.id'], name='factures_idConducteur_fkey'),
    sa.ForeignKeyConstraint(['idTaxe'], ['taxes.id'], name='factures_idTaxe_fkey'),
    sa.ForeignKeyConstraint(['idVehicule'], ['vehicules.id'], name='factures_idVehicule_fkey'),
    sa.PrimaryKeyConstraint('id', name='factures_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_factures_id'), 'factures', ['id'], unique=False)
    op.create_table('paiements',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('paiements_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('idFacture', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('montant', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('moyen', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('datePaiement', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('idTresorier', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['idFacture'], ['factures.id'], name='paiements_idFacture_fkey'),
    sa.ForeignKeyConstraint(['idTresorier'], ['users.id'], name='paiements_idTresorier_fkey'),
    sa.PrimaryKeyConstraint('id', name='paiements_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_paiements_id'), 'paiements', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('prenom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dNaissance', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('cni', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('tel', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('adresse', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('matricule', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('admin', 'tresorier', 'agent', 'conducteur', name='roleenum'), autoincrement=False, nullable=False),
    sa.Column('dateCreation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('tel', name='users_tel_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_users_matricule'), 'users', ['matricule'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_cni'), 'users', ['cni'], unique=True)
    op.create_table('transactions_mobiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('idFacture', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idPaiement', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('operateur', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('referenceOperateur', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('montant', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('statutOperateur', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cleIdempotence', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('urlPaiement', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donneesSignees', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dateCallback', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dateInitiation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['idFacture'], ['factures.id'], name=op.f('transactions_mobiles_idFacture_fkey')),
    sa.ForeignKeyConstraint(['idPaiement'], ['paiements.id'], name=op.f('transactions_mobiles_idPaiement_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('transactions_mobiles_pkey'))
    )
    op.create_index(op.f('ix_transactions_mobiles_id'), 'transactions_mobiles', ['id'], unique=False)
    op.create_table('vehicules',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('immatriculation', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('marque', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('annee', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conducteur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conducteur_id'], ['users.id'], name=op.f('vehicules_conducteur_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('vehicules_pkey'))
    )
    op.create_index(op.f('ix_vehicules_immatriculation'), 'vehicules', ['immatriculation'], unique=True)
    op.create_index(op.f('ix_vehicules_id'), 'vehicules', ['id'], unique=False)
    # ### end Alembic commands ###
